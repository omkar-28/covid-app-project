{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Charts/Charts.js","components/CountryPicker/CountryPicker.js","App.js","index.js","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","urlApi","fetchApi","a","axios","get","console","log","fetchDailyData","map","reportDate","total","Charts","useState","dailyData","setDailyData","useEffect","dailyDatas","fetchDailyApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","props","defaultProps","title","App","state","fetchedData","this","setState","style","overflow","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.463eea5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1NRPZ\",\"card\":\"Cards_card__3CmBT\",\"infected\":\"Cards_infected__YJEpg\",\"recovered\":\"Cards_recovered__1huqG\",\"deaths\":\"Cards_deaths__1Zj_F\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport cx from \"classnames\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n\r\n    if(!confirmed){\r\n        return \"Loading...\"\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={3} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">NUmber of active cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={3} separator=\",\" />\r\n                            \r\n                            </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">NUmber of Recoveries from Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={3} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">NUmber of death caused by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst urlApi = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchApi = async () => {\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(urlApi);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${urlApi}/daily`);\r\n        console.log(data)\r\n        \r\n        return data.map(({ confirmed, deaths, reportDate }) => ({\r\n            confirmed: confirmed.total, deaths: deaths.total, reportDate: reportDate\r\n        }));\r\n\r\n        // const modifiedData = data.map((dailyData) => ({\r\n        //     confirmed: dailyData.confirmed.total, \r\n        //     deaths: dailyData.deaths.total, \r\n        //     date: dailyData.reportDate\r\n        // }));\r\n\r\n        // return modifiedData\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styles from \"./Charts.module.css\";\r\n\r\nconst Charts = () => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchDailyApi = async () => {\r\n            const dailyDatas = await fetchDailyData();\r\n            setDailyData(dailyDatas)\r\n            console.log(dailyDatas)\r\n        }\r\n        \r\n        fetchDailyApi();\r\n    }, []);\r\n\r\n        const lineChart = (\r\n            dailyData.length !== 0\r\n            ?(<Line data={{\r\n                labels: dailyData.map(({ reportDate }) => reportDate),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: \"#3333ff\",\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: \"red\",\r\n                    backgroundColor: 'rgba(255,0,0,0.6)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n            />): null\r\n        );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = (props) => {\r\n    CountryPicker.defaultProps = {\r\n        title: \"country picker\"\r\n    }\r\n    CountryPicker.propTypes = {\r\n        title: PropTypes.string.isRequired\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, Charts, CountryPicker } from './components';\nimport { fetchApi } from './api';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchApi();\n    \n    this.setState({\n      data: fetchedData\n    })\n    \n  }\n\n  render() {\n\n    const {data} = this.state\n    \n    return (\n      <div className=\"container\" style={{overflow:\"hidden\"}}>\n        <Cards data={data} />\n        <Charts />\n        <CountryPicker />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__s3Xj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__3yXyf\"};"],"sourceRoot":""}