{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Charts/Charts.js","components/CountryPicker/CountryPicker.js","App.js","index.js","components/CountryPicker/CountryPicker.module.css","components/Charts/Charts.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","urlApi","fetchApi","country","a","url","axios","get","console","log","fetchDailyData","map","reportDate","total","fetchCountries","countries","name","Charts","useState","dailyData","setDailyData","useEffect","dailyDatas","fetchDailyApi","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleChangeCountry","fetchedCountry","setFecthedCountry","fetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","style","overflow","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCqDpJC,EA/CD,SAAC,GAAwD,IAAD,IAAtDC,KAAOC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAEjD,OAAIH,EAIA,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WACzE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,EAAGC,UAAU,OAEpE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAIR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YACzE,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,EAAGC,UAAU,OAGjE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAIR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SACzE,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,EAAGC,UAAU,OAEpE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,0CAnCT,c,yBCRTQ,EAAS,iCAEFC,EAAQ,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DAEhBC,EAAMJ,EACPE,GAAuB,WAAZA,IACVE,EAAG,UAAMA,EAAN,sBAAuBF,IAJV,kBAQmDG,IAAMC,IAAIF,GAR7D,2BAQRnC,KAAOC,EARC,EAQDA,UAAWC,EARV,EAQUA,UAAWC,EARrB,EAQqBA,OAAQC,EAR7B,EAQ6BA,WAR7B,kBAUT,CAAEH,YAAWC,YAAWC,SAAQC,eAVvB,kCAahBkC,QAAQC,IAAR,MAbgB,0DAAH,sDAiBRC,EAAc,uCAAG,8BAAAN,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEd/B,EAFc,EAEdA,KAFc,kBAIfA,EAAKyC,KAAI,gBAAGxC,EAAH,EAAGA,UAAWE,EAAd,EAAcA,OAAQuC,EAAtB,EAAsBA,WAAtB,MAAwC,CACpDzC,UAAWA,EAAU0C,MAAOxC,OAAQA,EAAOwC,MAAOD,WAAYA,OAL5C,gCAStBJ,QAAQC,IAAR,MATsB,yDAAH,qDAadK,EAAc,uCAAG,8BAAAV,EAAA,+EAEaE,IAAMC,IAAN,UAAaN,EAAb,eAFb,uBAEPc,EAFO,EAEd7C,KAAO6C,UAFO,kBAIfA,EAAUJ,KAAK,SAACR,GAAD,OAAaA,EAAQa,SAJrB,gCAMtBR,QAAQC,IAAR,MANsB,yDAAH,qD,yBCoCZQ,EAjEA,SAAC,GAAsD,IAAD,IAAnD/C,KAAOC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,OAAS8B,EAAa,EAAbA,QAAa,EAC/Be,mBAAS,IADsB,mBAC1DC,EAD0D,KAC/CC,EAD+C,KAGjEC,qBAAU,YACa,uCAAG,4BAAAjB,EAAA,sEACOM,IADP,OACZY,EADY,OAElBF,EAAaE,GAFK,2CAAH,qDAKnBC,KACD,IAGH,IAAMC,EACJL,EAAU,GACR,kBAAC,IAAD,CACEjD,KAAM,CACJuD,OAAQN,EAAUR,KAAI,qBAAGC,cACzBc,SAAU,CAAC,CACTxD,KAAMiD,EAAUR,KAAI,SAACzC,GAAD,OAAUA,EAAKC,aACnCwD,MAAO,WACPC,YAAa,UACbC,MAAM,GACL,CACD3D,KAAMiD,EAAUR,KAAI,SAACzC,GAAD,OAAUA,EAAKG,UACnCsD,MAAO,SACPC,YAAa,MACbE,gBAAiB,uBACjBD,MAAM,OAKV,KAGAE,EACF5D,EACE,kBAAC,IAAD,CACED,KAAM,CACJuD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPG,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClE5D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAItDoC,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsBjC,OAGpD,KAIR,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAU4B,EAAUP,I,mCC/BlBa,EA7BO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EAEDpB,mBAAS,IAFR,mBAEtCqB,EAFsC,KAEtBC,EAFsB,KAY7C,OARAnB,qBAAW,YACe,uCAAG,sBAAAjB,EAAA,kEACrBoC,EADqB,SACG1B,IADH,6EAAH,qDAItB2B,KACF,CAACD,IAGC,yBAAKjE,UAAWC,IAAOC,WACnB,8CAEA,kBAACiE,EAAA,EAAD,CAAanE,UAAWC,IAAOmE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOT,EAAoBS,EAAEC,OAAOpD,SACxE,4BAAQA,MAAM,UAAd,UAEI2C,EAAe5B,KAAK,SAACR,EAAS8C,GAAV,OAAgB,4BAAQC,IAAKD,EAAGrD,MAAOO,GAAUA,UCmB9EgD,E,4MArCbC,MAAQ,CACNlF,KAAM,GACNiC,QAAS,I,EAYXmC,oB,uCAAsB,WAAOnC,GAAP,eAAAC,EAAA,sEACMF,EAASC,GADf,OACdkD,EADc,OAEpB7C,QAAQC,IAAI4C,GACZ,EAAKC,SAAS,CACZnD,QAASA,EACTjC,KAAMmF,IALY,2C,wPARMnD,I,OAApBmD,E,OAENE,KAAKD,SAAS,CACZpF,KAAMmF,I,qIAcA,IAAD,EAEiBE,KAAKH,MAAtBlF,EAFA,EAEAA,KAAMiC,EAFN,EAEMA,QAEb,OACE,yBAAK5B,UAAU,YAAYiF,MAAO,CAACC,SAAS,WAC1C,kBAAC,EAAD,CAAenB,oBAAqBiB,KAAKjB,sBACzC,kBAAC,EAAD,CAAOpE,KAAMA,IACb,kBAAC,EAAD,CAAQA,KAAMA,EAAMiC,QAASA,S,GAjCnBuD,IAAMC,WCDxBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U,mBCL1BhG,EAAOC,QAAU,CAAC,UAAY,mC,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,4B","file":"static/js/main.98a9e073.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1NRPZ\",\"card\":\"Cards_card__3CmBT\",\"infected\":\"Cards_infected__YJEpg\",\"recovered\":\"Cards_recovered__1huqG\",\"deaths\":\"Cards_deaths__1Zj_F\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport cx from \"classnames\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n\r\n    if(!confirmed){\r\n        return \"Loading...\"\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={3} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">NUmber of active cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={3} separator=\",\" />\r\n                            \r\n                            </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">NUmber of Recoveries from Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={3} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">NUmber of death caused by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst urlApi = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchApi = async (country) => {\r\n    \r\n    let url = urlApi;\r\n    if(country && country !== \"global\") {\r\n        url = `${url}/countries/${country}`;\r\n    }\r\n    \r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(url);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${urlApi}/daily`);\r\n        \r\n        return data.map(({ confirmed, deaths, reportDate }) => ({\r\n            confirmed: confirmed.total, deaths: deaths.total, reportDate: reportDate\r\n        }));\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: {countries}} = await axios.get(`${urlApi}/countries`)\r\n\r\n        return countries.map( (country) => country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Charts.module.css\";\r\n\r\nconst Charts = ({ data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchDailyApi = async () => {\r\n            const dailyDatas = await fetchDailyData();\r\n            setDailyData(dailyDatas)\r\n        }\r\n        \r\n        fetchDailyApi();\r\n    }, []);\r\n   \r\n    \r\n    const lineChart = (\r\n      dailyData[0] ? (\r\n        <Line\r\n          data={{\r\n            labels: dailyData.map(({ reportDate }) => reportDate),\r\n            datasets: [{\r\n              data: dailyData.map((data) => data.confirmed),\r\n              label: 'Infected',\r\n              borderColor: '#3333ff',\r\n              fill: true,\r\n            }, {\r\n              data: dailyData.map((data) => data.deaths),\r\n              label: 'Deaths',\r\n              borderColor: 'red',\r\n              backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n              fill: true,\r\n            },\r\n            ],\r\n          }}\r\n        />\r\n      ) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current state in ${country}` },\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n    \r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart: lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport {fetchCountries} from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nconst CountryPicker = ({handleChangeCountry}) => {\r\n\r\n    const [fetchedCountry, setFecthedCountry] = useState([])\r\n\r\n    useEffect( () => {\r\n        const fetchedCountries = async () => {\r\n            setFecthedCountry(await fetchCountries());\r\n        }\r\n\r\n        fetchedCountries();\r\n    },[setFecthedCountry]);\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <h2>Country Picker</h2>\r\n\r\n            <FormControl className={styles.formControl}>\r\n                <NativeSelect defaultValue=\"\" onChange={(e) => handleChangeCountry(e.target.value)}>\r\n                    <option value=\"global\">Global</option>\r\n                    {\r\n                        fetchedCountry.map( (country, i) => <option key={i} value={country}>{country}</option>)\r\n                    }\r\n                </NativeSelect>\r\n            </FormControl>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Charts, CountryPicker } from './components';\r\nimport { fetchApi } from './api';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data: {},\r\n    country: \"\"\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchApi();\r\n    \r\n    this.setState({\r\n      data: fetchedData\r\n    })\r\n    \r\n  }\r\n\r\n  handleChangeCountry = async (country) => {\r\n    const fetchedData = await fetchApi(country);\r\n    console.log(fetchedData)\r\n    this.setState({\r\n      country: country,\r\n      data: fetchedData\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {data, country} = this.state\r\n    \r\n    return (\r\n      <div className=\"container\" style={{overflow:\"hidden\"}}>\r\n        <CountryPicker handleChangeCountry={this.handleChangeCountry}/>\r\n        <Cards data={data} />\r\n        <Charts data={data} country={country}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__3yXyf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__s3Xj8\"};"],"sourceRoot":""}